name: test

on:
  workflow_call:
    inputs:
      go_version:
        description: 'Go version to use'
        type: string
        required: true
      max_vuln_severity:
        description: 'Maximum vulnerability severity to allow'
        type: string
        required: true
jobs:

  test:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      security-events: write 
    steps:

    - name: Setup Go
      uses: actions/setup-go@v4
      with:
        go-version: ${{ github.event.inputs.go_version }}

    - run: go version

    - name: Cache Go Modules
      uses: actions/cache@v3
      with:
        path: |
          ~/.cache/go-build
          ~/go/pkg/mod
        key: ${{ runner.os }}-go-${{ hashFiles('**/go.sum') }}
        restore-keys: |
          ${{ runner.os }}-go-

    - name: Checkout Code
      uses: actions/checkout@v3

    - name: Tidy Modules
      run: |
        go mod tidy
        go mod vendor

    - name: Config Lint
      id: golangci_config
      uses: andstor/file-existence-action@v2
      with:
        files: .golangci.yaml

    - name: Lint Code
      if: steps.golangci_config.outputs.files_exists == 'true'
      uses: golangci/golangci-lint-action@v3
      with:
        version: latest

    - name: Unit Test
      run: |
        go test -short -count=1 -race -covermode=atomic -coverprofile=cover.out ./...

    - name: Scan Repo
      uses: aquasecurity/trivy-action@master
      with:
        scan-type: 'fs'
        ignore-unfixed: true
        hide-progress: false
        format: 'sarif'
        output: 'trivy-results.sarif'
        severity: ${{ github.event.inputs.max_vuln_severity }}
        exit-code: '1'

