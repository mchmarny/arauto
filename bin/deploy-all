#!/bin/bash

DIR="$(dirname "$0")"
. "${DIR}/config"

set -o errexit
set -o pipefail

# override the config one with the latest valid static image
IMAGE_URI=us-west1-docker.pkg.dev/cloudy-demos/artomator/artomator@sha256:f514089ea3f8cfef67bf8dd58b54ee14b4a07e9f849936c18f772f8d1afbdf19

# configure defaults 
gcloud config set project $PROJECT_ID
gcloud config set artifacts/location $REGION
gcloud config set deploy/region $REGION

# enables APIs
gcloud services enable \
  artifactregistry.googleapis.com \
  binaryauthorization.googleapis.com \
  cloudkms.googleapis.com \
  cloudresourcemanager.googleapis.com \
  container.googleapis.com \
  containerregistry.googleapis.com \
  containerscanning.googleapis.com \
  run.googleapis.com \
  pubsub.googleapis.com

# key to sign images
gcloud kms keyrings create $ROOT_NAME \
  --project $PROJECT_ID \
  --location $REGION

gcloud kms keys create $KEY_NAME \
  --project $PROJECT_ID \
  --location $REGION \
  --keyring $ROOT_NAME \
  --purpose asymmetric-signing \
  --default-algorithm rsa-sign-pkcs1-4096-sha512

gcloud kms keys describe $KEY_NAME \
  --project $PROJECT_ID \
  --location $REGION \
  --keyring $ROOT_NAME \
  --format json | jq --raw-output '.name'

# creates the Artifact Registry repo
gcloud artifacts repositories create $ROOT_NAME \
  --location $REGION \
  --repository-format=docker

gcloud iam service-accounts create $SA_NAME \
    --display-name "Service invoker for ${SA_NAME}"

# roles 
gcloud projects add-iam-policy-binding $PROJECT_ID \
     --member "serviceAccount:${SA_EMAIL}" \
     --role roles/storage.objectCreator

gcloud projects add-iam-policy-binding $PROJECT_ID \
     --member "serviceAccount:${SA_EMAIL}" \
     --role roles/storage.objectViewer

gcloud projects add-iam-policy-binding $PROJECT_ID \
     --member "serviceAccount:${SA_EMAIL}" \
     --role roles/artifactregistry.writer

gcloud projects add-iam-policy-binding $PROJECT_ID \
     --member "serviceAccount:${SA_EMAIL}" \
     --role roles/cloudkms.viewer

gcloud projects add-iam-policy-binding $PROJECT_ID \
     --member "serviceAccount:${SA_EMAIL}" \
     --role roles/cloudkms.signerVerifier
	 
# cloud run 
gcloud run deploy $ROOT_NAME \
	--no-allow-unauthenticated \
	--execution-environment=gen2 \
	--image $IMAGE_URI \
     --memory=2Gi \
	--min-instances=1 \
	--max-instances=5 \
	--platform managed \
	--timeout 15m \
	--region $REGION \
	--service-account $SA_EMAIL \
	--set-env-vars=PROJECT_ID=$PROJECT_ID,SIGN_KEY=$SIGN_KEY

gcloud run services add-iam-policy-binding $ROOT_NAME \
	--member "serviceAccount:${SA_EMAIL}" \
	--region $REGION \
	--role roles/run.invoker

SERVICE_URL=$(gcloud run services describe $ROOT_NAME \
  --region $REGION --format="value(status.url)")

echo $SERVICE_URL

# pubsub
gcloud pubsub topics create gcr

gcloud projects add-iam-policy-binding $PROJECT_ID \
     --member "serviceAccount:service-${PROJECT_NUMBER}@gcp-sa-pubsub.iam.gserviceaccount.com" \
     --role roles/iam.serviceAccountTokenCreator

gcloud pubsub subscriptions create gcr-sub \
  --topic gcr \
  --ack-deadline 600 \
  --push-endpoint "${SERVICE_URL}/" \
  --push-auth-service-account $SA_EMAIL
  