#!/bin/bash

set -o errexit

PROJECT_ID=$1
SIGN_KEY=$2
IMAGE_DIGEST=$3 # image (registry/image@sha:*** or ar/registry/image@sha:***)
TYPE=$4 # predicate type (spdx or cyclonedx)
TARGET=$5 # target path for SBOM

# check required input parameters
[ -z "$IMAGE_DIGEST" ] && echo "arg IMAGE_DIGEST not set\n" && exit 1
[ -z "$PROJECT_ID" ] && echo "arg PROJECT_ID not set\n" && exit 1
[ -z "$SIGN_KEY" ] && echo "arg SIGN_KEY not set\n" && exit 1
[ -z "$TYPE" ] && echo "arg TYPE not set\n" && exit 1
[ -z "$TARGET" ] && echo "arg TARGET not set\n" && exit 1

# parse registry from image 
REGISTRY=$(echo $IMAGE_DIGEST | cut -d'/' -f 1)
IMG_SHA=$(echo $IMAGE_DIGEST | cut -d'@' -f 2)

# format KMS key for cosign
CO_KEY="gcpkms://${SIGN_KEY}"

# print run variables 
echo "
PROJECT:  $PROJECT_ID
KEY:      $SIGN_KEY
DIGEST:   $IMAGE_DIGEST
REGISTRY: $REGISTRY
SHA:      $IMG_SHA
TYPE:     $TYPE
TARGET:   $TARGET
"

# confgure gcloud 
gcloud auth configure-docker $REGISTRY --quiet
gcloud config set project $PROJECT_ID

# generate public key-pair from KMS if one does not exist 
if [ ! -f cosign.pub ]; then
    cosign generate-key-pair --kms $CO_KEY
fi

# verify SBOM
cosign verify-attestation \
    --type=$TYPE \
    --key $CO_KEY \
    --enforce-sct \
    --timeout 10m \
    $IMAGE_DIGEST | \
    jq -r .payload | \
    base64 -d > $TARGET
