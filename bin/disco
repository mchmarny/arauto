#!/bin/bash

set -o errexit

DIR=${1:-.} # target dir path for the report or current folder

# list of images already scanned
DIGESTS=()

# for all regions where run is supported
for reg in  $(gcloud run regions list --format "value(locationId)"); do
  # for all active projects excluding folders in that region
  for prj in $(gcloud projects list --format 'value(projectId)' --filter 'parent.type:organization AND lifecycleState:ACTIVE'); do
    # where run service is anabled 
    run=$(gcloud services list --project $prj --format 'value(name)' --filter 'config.name:"run.googleapis.com" AND state:ENABLED')
    if [ -z "$run" ]; then continue; fi
      # for all run services in that region/project
      for svc in $(gcloud run services list --project $prj --region $reg --format "value(metadata.name)"); do
        # get last revision
        rev=$(gcloud run services describe $svc --project $prj --region $reg --format "value(status.latestReadyRevisionName)")
        # skip if no ready revisions
        if [[ -z "$rev" ]]; then continue; fi 
        # get the revision digest
        img=$(gcloud run revisions describe $rev --region $reg --format "value(status.imageDigest)")
        # skip if the image has already scanned
        if [[ " ${DIGESTS[@]} " =~ " ${img} " ]]; then continue; fi
        # add the image to the list of images to scan
        DIGESTS+=($img)
        # scan that image
        bin/scan $prj $img "${DIR}/${prj}---${reg}---${svc}.json"
      done
  done
done 
