#!/bin/bash

DIR="$(dirname "$0")"
. "${DIR}/config"

set -o errexit
set -o pipefail

DIRTY_IMG="$IMAGE_URI-dirty"

# Build and push image
docker build --build-arg VERSION="${VERSION}-dirty" \
             --platform linux/amd64 \
             -t $DIRTY_IMG \
             .
docker push $DIRTY_IMG

IMAGE_DIGEST=$(docker inspect --format='{{index .RepoDigests 0}}' $DIRTY_IMG)
echo "IMAGE_SHA: ${IMAGE_DIGEST}\n"

# Sign and verify image
cosign sign --key $SIGN_KEY -a version=$VERSION -a commit=$COMMIT $IMAGE_DIGEST
cosign verify --key $SIGN_KEY $IMAGE_DIGEST

# Generate SBOM from image and attach it as attestation to the image
syft -s AllLayers -q packages -o spdx-json $IMAGE_DIGEST | jq --compact-output > sbom.json
cosign attest --predicate sbom.json --type spdx --key $SIGN_KEY $IMAGE_DIGEST
cosign verify-attestation --type=spdx  --key $SIGN_KEY $IMAGE_DIGEST | jq -r .payload | base64 -d | jq -r .predicateType

# Scan packages in SBOM for vulnerabilities and attach report as attestation to the image
trivy image $IMAGE_DIGEST --format json --security-checks vuln --severity "MEDIUM,HIGH,CRITICAL" | jq --compact-output > vuln.json
cosign attest --predicate vuln.json --type vuln --key $SIGN_KEY $IMAGE_DIGEST
cosign verify-attestation --type=vuln  --key $SIGN_KEY $IMAGE_DIGEST | jq -r .payload | base64 -d | jq -r .predicateType
